# Build this docker image with:
#
#     sudo docker build .
#
# Take note of the <image_id>, which will be the output above in the
# form "Successfully built <image_id>". Now, run the IPython web
# notebook with:
#
#     sudo docker run -p 8889:8889 <image_id>
#
# This will spawn a webserver on port 8889. Go there and follow the
# instructions.
#
# The cache for RUN instructions can be invalidated by using 
# the --no-cache flag, for example docker build --no-cache
#
 
FROM ubuntu:10.04
#precise FROM ubuntu:12.04
#trusty FROM ubuntu:14.04


MAINTAINER btorch <btorch@gmail.com>

# ---- Install any additional ubuntu packages ------------
RUN apt-get update && apt-get install -y --force-yes \
	curl \
	libjs-jquery \
	python \
	python-all \
	python-all-dev \
	python-dev \
	python-docutils \
	python-jinja2 \
	python-pygments \
	python-setuptools \
	python-support \
	python-pip \
	python-stdeb


# ---- Install deb building packages and dependencies ------------
RUN apt-get update && apt-get install -y --force-yes \
	build-essential \
	cdbs \
	fakeroot \
	debhelper \
	devscripts \
	dpkg-dev 


# ---- install swiftscout build dependencies ------------
RUN apt-get update && apt-get install -y --force-yes python-simplejson 
RUN pip install -Iv eventlet==0.14.0	

# ---- Add application source from context to image ------------
ADD swiftscout /usr/local/src/source/

# ---- Start stdeb packaging ------------
WORKDIR /usr/local/src/source
RUN echo "[DEFAULT]" > extra-stdeb.cfg
RUN echo "XS-Python-Version: >= 2.6" >> extra-stdeb.cfg 
RUN echo "Suite: lucid-development" >> extra-stdeb.cfg

RUN python setup.py --command-packages=stdeb.command sdist_dsc -x extra-stdeb.cfg bdist_deb 

# overwrite this with 'CMD []' in a dependent Dockerfile
#ENV PS1='[\u@\h ]\$ '
#CMD ["/bin/bash"]

